namespace FlatBuffers;

struct Vector {
  x: double;
  y: double;
}

struct Vertex {
  x: double;
  y: double;
  z: double;
}

struct Edge {
  from: Vector;
  to: Vector;
}

table Polygon {
  edges: [Edge];
}

table Polyhedron {
  vertices: [Vertex];
}

struct Interval {
  min: double;
  max: double;
}

struct Id {
  bits: uint64;
  depth: uint8;
  interval: Interval; // helper
}

table Projection { // helper
  vectors: [Vector];
}

table Box2 {
  theta: Id;
  phi: Id;
  projections: [Projection]; // helper
  out: [uint8]; // helper
}

table Box3 {
  theta: Id;
  phi: Id;
  alpha: Id;
  projections: [Projection]; // helper
  projection: Polygon; // helper
  box2s: [Box2];
  complete: bool; // helper
  in: int32; // helper
}

table Cover {
  description: string;
  hole: Polyhedron;
  plug: Polyhedron;
  box3s: [Box3];
}

root_type Cover;