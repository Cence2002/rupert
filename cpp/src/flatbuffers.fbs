namespace FlatBuffers;

struct Vector2 {
  x: double;
  y: double;
}

struct Vector3 {
  x: double;
  y: double;
  z: double;
}

struct Line {
  point: Vector2;
  direction: Vector2;
}

table Polygon {
  lines: [Line];
}

table Polyhedron {
  vertices: [Vector3];
}

struct Id {
  bits: uint32;
  depth: uint8;
}

struct Interval {
  min: double;
  max: double;
}

struct IdInterval {
  id: Id;
  interval: Interval; // helper
}

table Projection { // helper
  vertices: [Vector2];
}

table Box2 {
  phi: IdInterval;
  theta: IdInterval;
  projections: [Projection]; // helper
  out: [uint8]; // helper
}

table Box3 {
  phi: IdInterval;
  theta: IdInterval;
  alpha: IdInterval;
  projections: [Projection]; // helper
  projection: Polygon; // helper
}

table Cover {
  box3: Box3;
  box2s: [Box2];
  complete: bool; // helper
  in: [uint8]; // helper
}

table Data {
  description: string;
  hole: Polyhedron;
  plug: Polyhedron;
  covers: [Cover];
}

root_type Data;