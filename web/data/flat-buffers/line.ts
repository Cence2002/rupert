// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { Vector2 } from '../flat-buffers/vector2';


export class Line {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Line {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

point(obj?:Vector2):Vector2|null {
  return (obj || new Vector2()).__init(this.bb_pos, this.bb!);
}

direction(obj?:Vector2):Vector2|null {
  return (obj || new Vector2()).__init(this.bb_pos + 16, this.bb!);
}

static sizeOf():number {
  return 32;
}

static createLine(builder:flatbuffers.Builder, point_x: number, point_y: number, direction_x: number, direction_y: number):flatbuffers.Offset {
  builder.prep(8, 32);
  builder.prep(8, 16);
  builder.writeFloat64(direction_y);
  builder.writeFloat64(direction_x);
  builder.prep(8, 16);
  builder.writeFloat64(point_y);
  builder.writeFloat64(point_x);
  return builder.offset();
}

}
