// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { Vector2 } from '../flat-buffers/vector2';


export class Edge {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Edge {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

from(obj?:Vector2):Vector2|null {
  return (obj || new Vector2()).__init(this.bb_pos, this.bb!);
}

to(obj?:Vector2):Vector2|null {
  return (obj || new Vector2()).__init(this.bb_pos + 16, this.bb!);
}

static sizeOf():number {
  return 32;
}

static createEdge(builder:flatbuffers.Builder, from_x: number, from_y: number, to_x: number, to_y: number):flatbuffers.Offset {
  builder.prep(8, 32);
  builder.prep(8, 16);
  builder.writeFloat64(to_y);
  builder.writeFloat64(to_x);
  builder.prep(8, 16);
  builder.writeFloat64(from_y);
  builder.writeFloat64(from_x);
  return builder.offset();
}

}
