// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class Interval {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Interval {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

min():number {
  return this.bb!.readFloat64(this.bb_pos);
}

max():number {
  return this.bb!.readFloat64(this.bb_pos + 8);
}

mid():number {
  return this.bb!.readFloat64(this.bb_pos + 16);
}

len():number {
  return this.bb!.readFloat64(this.bb_pos + 24);
}

static sizeOf():number {
  return 32;
}

static createInterval(builder:flatbuffers.Builder, min: number, max: number, mid: number, len: number):flatbuffers.Offset {
  builder.prep(8, 32);
  builder.writeFloat64(len);
  builder.writeFloat64(mid);
  builder.writeFloat64(max);
  builder.writeFloat64(min);
  return builder.offset();
}

}
